# Fluentd v1.16 Production Configuration
# External plugin versions:
# - fluent-plugin-kubernetes_metadata_filter: 3.2.0
# - fluent-plugin-grafana-loki: 1.2.20
# - fluent-plugin-prometheus: 2.1.0

# System-wide configurations
<system>
  root_dir /fluentd/log
  log_level info
  workers 4
  log_rotate_age 7d
  log_rotate_size 10M
  enable_monitor_agent true
  <health_check>
    port 24220
  </health_check>
</system>

# Prometheus monitoring plugin configuration
<source>
  @type prometheus
  port 24231
  metrics_path /metrics
</source>

<source>
  @type prometheus_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# Prometheus custom metrics
<source>
  @type prometheus_output_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# Define custom metrics
<metric>
  name fluentd_buffer_size
  type gauge
  desc Current buffer size
</metric>

<metric>
  name fluentd_retry_count
  type counter
  desc Number of retry attempts
</metric>

# Kubernetes container log source
<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag kubernetes.*
  read_from_head true
  refresh_interval 5s
  limit_recently_modified 60s
  enable_watch_timer true
  enable_stat_watcher true
  read_lines_limit 1000
  <parse>
    @type json
    time_key time
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>

# Kubernetes metadata enrichment filter
<filter kubernetes.**>
  @type kubernetes_metadata
  watch true
  cache_size 10000
  cache_ttl 3600
  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
  tag_to_kubernetes_name_regexp kubernetes\.var\.log\.containers\.(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$
  ssl_partial_chain true
  verify_ssl true
  kubernetes_url https://kubernetes.default.svc
  <apiserver_timeouts>
    connect 3s
    read 5s
    write 5s
  </apiserver_timeouts>
</filter>

# Record transformer for additional metadata
<filter kubernetes.**>
  @type record_transformer
  enable_ruby true
  <record>
    severity ${record.dig('stream') == 'stderr' ? 'ERROR' : 'INFO'}
    timestamp ${Time.now.utc.iso8601}
    hostname ${hostname}
  </record>
</filter>

# Loki output configuration
<match kubernetes.**>
  @type loki
  endpoint http://loki:3100
  
  <label>
    job fluentd
    namespace ${record['kubernetes']['namespace_name']}
    app ${record['kubernetes']['labels']['app']}
    pod ${record['kubernetes']['pod_name']}
    container ${record['kubernetes']['container_name']}
    node ${record['kubernetes']['host']}
    severity ${record['severity']}
  </label>

  <buffer>
    @type file
    path /fluentd/log/buffer
    flush_interval 10s
    chunk_limit_size 2M
    total_limit_size 512M
    overflow_action block
    retry_forever true
    retry_max_interval 30
    retry_type exponential_backoff
    flush_thread_count 4
    flush_mode interval
  </buffer>

  ssl_verify true
  compression gzip
  request_timeout 5s

  <circuit_breaker>
    timeout 60s
    threshold 5
    reset_time 300s
  </circuit_breaker>
</match>

# Error handling for failed records
<label @ERROR>
  <match **>
    @type file
    path /fluentd/log/error.log
    append true
    <buffer>
      @type file
      path /fluentd/log/error-buffer
      flush_interval 30s
      retry_forever false
      retry_max_times 5
    </buffer>
  </match>
</label>

# Monitoring agent configuration
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
  tag monitor.fluentd
</source>