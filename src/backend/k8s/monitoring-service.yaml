# Workflow Automation Platform - Monitoring Service
# Version: 1.0.0
# Purpose: Kubernetes configuration for monitoring service with metrics collection,
# health checks, and distributed tracing capabilities
# Security: Enhanced with security contexts, RBAC, and resource limits

apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-service
  namespace: workflow-platform
  labels:
    app: monitoring-service
    component: observability
    environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-service
  namespace: workflow-platform
  labels:
    app: monitoring-service
    component: observability
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: monitoring-service
  template:
    metadata:
      labels:
        app: monitoring-service
      annotations:
        checksum/config: ${CONFIG_CHECKSUM}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: monitoring-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: monitoring-service
        image: monitoring-service:latest
        imagePullPolicy: Always
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: SERVICE_NAME
          value: "monitoring-service"
        - name: METRICS_PORT
          value: "9090"
        - name: HEALTH_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: TRACING_ENABLED
          value: "true"
        - name: GOMAXPROCS
          value: "1"
        envFrom:
        - configMapRef:
            name: monitoring-config
        - secretRef:
            name: monitoring-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
        volumeMounts:
        - name: config-volume
          mountPath: /etc/monitoring
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: monitoring-config
      - name: tmp-volume
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - monitoring-service
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  namespace: workflow-platform
  labels:
    app: monitoring-service
    component: observability
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: monitoring-service
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: monitoring-service-pdb
  namespace: workflow-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: monitoring-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: monitoring-service-hpa
  namespace: workflow-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: monitoring-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80