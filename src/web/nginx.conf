# NGINX Version: 1.24.0
# Purpose: Production configuration for workflow automation platform

user nginx;
worker_processes auto;

# Optimized event loop configuration
events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$request_id"';
    access_log /var/log/nginx/access.log main buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Optimized sendfile configuration
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Connection timeouts
    keepalive_timeout 75;
    keepalive_requests 1000;
    client_max_body_size 20M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;

    # Compression settings - Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 860;
    gzip_types text/plain
               text/css
               text/javascript
               application/javascript
               application/json
               application/x-javascript
               text/xml
               application/xml
               application/xml+rss
               text/javascript
               application/vnd.ms-fontobject
               application/x-font-ttf
               font/opentype
               image/svg+xml
               image/x-icon
               application/wasm
               application/graphql;

    # Compression settings - Brotli
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain
                 text/css
                 application/javascript
                 application/json
                 image/svg+xml;

    # Buffer size settings
    client_body_buffer_size 16k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;

    # Proxy buffer settings
    proxy_buffering on;
    proxy_buffer_size 16k;
    proxy_buffers 8 32k;
    proxy_busy_buffers_size 64k;

    # SSL Session Cache
    ssl_session_cache shared:SSL:100m;
    ssl_session_timeout 4h;
    ssl_session_tickets off;

    # Modern SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_dhparam /etc/nginx/dhparam.pem;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Main server configuration
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL Certificate paths
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # Security Headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        # Dynamic CSP nonce generation
        set $csp_nonce $request_id;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-${csp_nonce}' 'strict-dynamic'; style-src 'self' 'nonce-${csp_nonce}'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://*.api.domain.com wss://*.domain.com; frame-ancestors 'none'; base-uri 'none'; form-action 'self'" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets with aggressive caching
        location ^~ /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable, no-transform";
            try_files $uri =404;
        }

        # API Gateway proxy
        location ^~ /api/ {
            proxy_pass http://api-gateway:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Proxy error handling
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;

            # No caching for API responses
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Main application routing
        location / {
            expires 1h;
            add_header Cache-Control "public, no-transform";
            try_files $uri $uri/ /index.html;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            root /usr/share/nginx/html;
        }

        # Additional security measures
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
            return 444;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }
}